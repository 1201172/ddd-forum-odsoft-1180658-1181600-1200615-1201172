plugins {
    id "com.github.node-gradle.node" version "7.0.0"
}

import org.gradle.internal.os.OperatingSystem
OperatingSystem os = OperatingSystem.current();
String npm = os.isLinux() ? 'npm' : 'npm.cmd'

task installDependenciesAndBuild(type: Exec) {
        commandLine npm, 'run-script', 'installDependenciesAndBuild'
}

node {
    // Version of node to use.
    version = '12.22.12'

    // Version of npm to use.
    //npmVersion = '6.14.16'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true
}

task initializeDocker(type: Exec) {
    commandLine 'docker', 'compose', 'up'
}

task initializeBackend(type: Exec) {
    dependsOn initializeDocker
    commandLine 'npm', 'run', 'start:dev'
}

task npm_run_test_dev(type: Exec) {
    dependsOn 'npmInstall' // Add the npmInstall task as a dependency
    commandLine 'npm.cmd', 'run', 'test:dev'
}

task runApiTests() {
    doLast {
        exec {
            commandLine 'npm.cmd', 'run', 'test'
            commandLine 'docker', 'compose'
        }
    }

    doLast {
        println "Npm commands executed: db:delete:dev, db:create:dev, migrate:dev, jest"
    }
}

// Define task dependencies to ensure the commands run in order
runApiTests.dependsOn 'npmInstall'

// Optionally, specify a description for the task
runApiTests.description = 'Run npm commands in order: db:delete:dev, db:create:dev, migrate:dev, jest'